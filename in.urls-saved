#!/usr/bin/env perl
use strict;
use warnings;
use Data::Dumper;
use Getopt::Long;
use FindBin qw/$Bin/;
use File::Basename;
use lib $Bin;
use UrlToDest;
chdir $Bin;

my $download_dir; # либо через позиционные (по старому)
my $deb;
my $stats;
my %stats;

# либо ключами:
GetOptions(
 "download-dir=s" => \$download_dir,
 "deb"=> \$deb,
 "stats"=> \$stats,
) or die "Bad opt!";

$download_dir ||= shift;
$deb||=shift;
$stats||=shift;

die "download-dir!" if !$download_dir;
warn("$download_dir is not exists. Creating it...") and mkdir($download_dir) if ! -d $download_dir;

# на STDIN - подавать урлы для скачивания
while(<STDIN>){
 if ( length($_)>230 ){ # bash ограничивает длину файлов 255 байт
    $stats{skip_too_long}++;
    warn("Skip too long url: $_") if $deb;
    next;
 }
 my $url = $_;
 $url = "http://$url" if not $url=~m|\://|;
 my $dest = UrlToDest::that($url, prefix=>$download_dir, root=>"ROOT", suffix=>"saved");
 if ( -e $dest ){
    warn "skip $dest - exists" if $deb;
    $stats{skip_ready}++;
    next;
 }elsif( -e "$dest.TMP" ){ # пропуск файлов TMP и готовых (чтобы не заставлять washing это делать)
    warn "skip $dest.TMP - tmp exists." if $deb;
    $stats{skip_tmp}++;
    next;
 }else{
    
    my $dirname_dest = dirname( $dest);    
    if ( !-d $dirname_dest ){
        #mkdir $dirname_dest or warn "Cant create dir $dirname_dest:$!";
        my $rv = system( `mkdir -p "$dirname_dest"` );
        if ( $rv!=0 ){
            warn "Cant create dir $dirname_dest:$!";
            $stats{errors}++;
            next;
        }
    }    
    
    sleep 1;
    
    `bash -c "[[ ! -s \\\"$dest\\\" ]] && echo \\\"$url\\\" | viatmp $dest.url"`;

    my $bashcmd = qq{ netflag --file=$dest.FLAG -cmd=\\\"(./PHANTOM/url-content-timeout.sh \\\\\\"$url\\\\\\" \"15000\" 2>&1 )> $dest.TMP && mv $dest.TMP $dest\\\" };
    
    my $cmd = qq{bash -c \"$bashcmd\"};
    warn "$cmd" if $deb;
    my $rv = system($cmd);

    if ( $rv!=0 ){
	warn "Status = $rv" if $deb;
	#exit 1;
	$stats{errors}++;
    }else{
	$stats{success}++;
    }	
    
    #die "Stop"; # after first site
    
    my $dt = `date +"%F %H:%M"`;
    chomp($dt);
    my @stat = %stats;
    warn "$dt: @stat ($url)\n" if $stats;
 } 
}

END{
 warn "END: " . Dumper(\%stats) if $deb;
}	







